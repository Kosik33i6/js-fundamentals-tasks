{"id":"../../node_modules/validate-date/validate-date.js","dependencies":[{"name":"D:\\Localhost-JS-TS-Fundamentals\\tasks\\package.json","includedInParent":true,"mtime":1632726709624},{"name":"D:\\Localhost-JS-TS-Fundamentals\\tasks\\.babelrc","includedInParent":true,"mtime":1631003182956},{"name":"D:\\Localhost-JS-TS-Fundamentals\\tasks\\node_modules\\validate-date\\package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"function validateDate(dateValue, responseType = \"string\", dateFormat = null) {\r\n  let responses = responseSetter(responseType)\r\n  if (dateValue == null) {\r\n    return responses[0];\r\n  }\r\n\r\n  return dateValidator(dateValue, responses, dateFormat);\r\n}\r\n\r\n// TODO- This function returns different response types(String or boolean) which might be an anti pattern. Investigate and make necessary changes\r\nfunction responseSetter(responseType) {\r\n  switch (responseType) {\r\n    case \"string\":\r\n      return [\"Invalid Format\", \"Invalid Date\", \"Valid Date\"];\r\n    case \"boolean\":\r\n      return [false, false, true];\r\n\r\n    default:\r\n      return [\"Invalid Format\", \"Invalid Date\", \"Valid Date\"];\r\n  }\r\n}\r\n\r\nfunction daysInMonth(year, month) {\r\n  const days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n  return (month === 2 && year % 4 === 0) ? 29 : days[month - 1];\r\n}\r\n\r\nfunction getAllIndexes(arr, val) {\r\n  var indexes = [];\r\n  for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i] === val) indexes.push(i);\r\n  }\r\n\r\n  return indexes;\r\n}\r\n\r\nfunction dateValidator(dateValue, responses, dateFormat) {\r\n    if (dateValue) {\r\n        \r\n        if (!dateFormat) {\r\n        dateFormat = dateValue.includes(\"-\") ? \"yyyy-mm-dd\" : \"mm/dd/yyyy\";\r\n        }\r\n\r\n        if (dateFormat.length > 10 || dateFormat.length < 6) return responses[0];\r\n\r\n        const formatSplit = dateValue.includes(\"-\")\r\n        ? dateFormat.split(\"-\")\r\n        : dateFormat.split(\"/\");\r\n\r\n        let wrongFormat = formatSplit\r\n        .map((formatPart) => /([dmy])\\1/i.test(formatPart))\r\n        .filter((rightFormat) => !rightFormat);\r\n\r\n        if (wrongFormat.length > 0) return responses[0];\r\n\r\n        let dateSeparator = dateValue.includes(\"-\") ? \"-\" : \"/\";\r\n\r\n        let formatRegex = new RegExp(\r\n        `(\\\\d{${formatSplit[0].length}})(${dateSeparator})(\\\\d{${formatSplit[1].length}})(${dateSeparator})(\\\\d{${formatSplit[2].length}})`\r\n        );\r\n\r\n        let dayPosition = getAllIndexes(\r\n        formatSplit,\r\n        formatSplit.filter((formatPart) => /[d]/i.test(formatPart))[0]\r\n        );\r\n        let monthPosition = getAllIndexes(\r\n        formatSplit,\r\n        formatSplit.filter((formatPart) => /[m]/i.test(formatPart))[0]\r\n        );\r\n        let yearPosition = getAllIndexes(\r\n        formatSplit,\r\n        formatSplit.filter((formatPart) => /[y]/i.test(formatPart))[0]\r\n        );\r\n\r\n        if (dayPosition.length !== 1 ||\r\n        monthPosition.length !== 1 ||\r\n        yearPosition.length !== 1\r\n        ) {\r\n            return responses[0];\r\n        }\r\n\r\n        if (formatRegex.test(dateValue)) {\r\n        const dateSplit = dateValue.split(dateSeparator);\r\n        const day = Number(dateSplit[dayPosition]);\r\n        const month = Number(dateSplit[monthPosition]);\r\n        const year = Number(dateSplit[yearPosition]);\r\n        if (\r\n            month <= 0 ||\r\n            month > 12 ||\r\n            day > daysInMonth(year, month) ||\r\n            day <= 0 ||\r\n            year < 1753) \r\n            {\r\n                return responses[1];\r\n            }\r\n        } else {\r\n            return responses[0];\r\n        }\r\n    }\r\n\r\n  return responses[2];\r\n}\r\n\r\nmodule.exports = validateDate;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/validate-date/validate-date.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}}],"sources":{"../../node_modules/validate-date/validate-date.js":"function validateDate(dateValue, responseType = \"string\", dateFormat = null) {\r\n  let responses = responseSetter(responseType)\r\n  if (dateValue == null) {\r\n    return responses[0];\r\n  }\r\n\r\n  return dateValidator(dateValue, responses, dateFormat);\r\n}\r\n\r\n// TODO- This function returns different response types(String or boolean) which might be an anti pattern. Investigate and make necessary changes\r\nfunction responseSetter(responseType) {\r\n  switch (responseType) {\r\n    case \"string\":\r\n      return [\"Invalid Format\", \"Invalid Date\", \"Valid Date\"];\r\n    case \"boolean\":\r\n      return [false, false, true];\r\n\r\n    default:\r\n      return [\"Invalid Format\", \"Invalid Date\", \"Valid Date\"];\r\n  }\r\n}\r\n\r\nfunction daysInMonth(year, month) {\r\n  const days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n  return (month === 2 && year % 4 === 0) ? 29 : days[month - 1];\r\n}\r\n\r\nfunction getAllIndexes(arr, val) {\r\n  var indexes = [];\r\n  for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i] === val) indexes.push(i);\r\n  }\r\n\r\n  return indexes;\r\n}\r\n\r\nfunction dateValidator(dateValue, responses, dateFormat) {\r\n    if (dateValue) {\r\n        \r\n        if (!dateFormat) {\r\n        dateFormat = dateValue.includes(\"-\") ? \"yyyy-mm-dd\" : \"mm/dd/yyyy\";\r\n        }\r\n\r\n        if (dateFormat.length > 10 || dateFormat.length < 6) return responses[0];\r\n\r\n        const formatSplit = dateValue.includes(\"-\")\r\n        ? dateFormat.split(\"-\")\r\n        : dateFormat.split(\"/\");\r\n\r\n        let wrongFormat = formatSplit\r\n        .map((formatPart) => /([dmy])\\1/i.test(formatPart))\r\n        .filter((rightFormat) => !rightFormat);\r\n\r\n        if (wrongFormat.length > 0) return responses[0];\r\n\r\n        let dateSeparator = dateValue.includes(\"-\") ? \"-\" : \"/\";\r\n\r\n        let formatRegex = new RegExp(\r\n        `(\\\\d{${formatSplit[0].length}})(${dateSeparator})(\\\\d{${formatSplit[1].length}})(${dateSeparator})(\\\\d{${formatSplit[2].length}})`\r\n        );\r\n\r\n        let dayPosition = getAllIndexes(\r\n        formatSplit,\r\n        formatSplit.filter((formatPart) => /[d]/i.test(formatPart))[0]\r\n        );\r\n        let monthPosition = getAllIndexes(\r\n        formatSplit,\r\n        formatSplit.filter((formatPart) => /[m]/i.test(formatPart))[0]\r\n        );\r\n        let yearPosition = getAllIndexes(\r\n        formatSplit,\r\n        formatSplit.filter((formatPart) => /[y]/i.test(formatPart))[0]\r\n        );\r\n\r\n        if (dayPosition.length !== 1 ||\r\n        monthPosition.length !== 1 ||\r\n        yearPosition.length !== 1\r\n        ) {\r\n            return responses[0];\r\n        }\r\n\r\n        if (formatRegex.test(dateValue)) {\r\n        const dateSplit = dateValue.split(dateSeparator);\r\n        const day = Number(dateSplit[dayPosition]);\r\n        const month = Number(dateSplit[monthPosition]);\r\n        const year = Number(dateSplit[yearPosition]);\r\n        if (\r\n            month <= 0 ||\r\n            month > 12 ||\r\n            day > daysInMonth(year, month) ||\r\n            day <= 0 ||\r\n            year < 1753) \r\n            {\r\n                return responses[1];\r\n            }\r\n        } else {\r\n            return responses[0];\r\n        }\r\n    }\r\n\r\n  return responses[2];\r\n}\r\n\r\nmodule.exports = validateDate;\r\n"},"lineCount":106}},"error":null,"hash":"db05ef3f83b0c1eebb9cf79ab1b9b8b5","cacheData":{"env":{}}}