{"id":"componnets/User.js","dependencies":[{"name":"D:\\Localhost-JS-TS-Fundamentals\\tasks\\.babelrc","includedInParent":true,"mtime":1631003182956},{"name":"D:\\Localhost-JS-TS-Fundamentals\\tasks\\package.json","includedInParent":true,"mtime":1633341716755},{"name":"uuid","loc":{"line":1,"column":29},"parent":"D:\\Localhost-JS-TS-Fundamentals\\tasks\\module-2\\libray\\componnets\\User.js","resolved":"D:\\Localhost-JS-TS-Fundamentals\\tasks\\node_modules\\uuid\\dist\\esm-browser\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _uuid = require(\"uuid\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar User = /*#__PURE__*/function () {\n  function User(name, surname) {\n    _classCallCheck(this, User);\n\n    this.uservalidator(name, surname);\n    this.name = name;\n    this.surname = surname;\n    this.uuid = (0, _uuid.v4)();\n  }\n\n  _createClass(User, [{\n    key: \"uservalidator\",\n    value: function uservalidator(name, surname) {\n      var isArgumentsHaveCorrectType = typeof name === 'string' && typeof surname === 'string';\n      if (!isArgumentsHaveCorrectType) throw new Error('Argument name and surname have to be a string');\n      var isArgumentsHaveCorrectLength = name.length >= 2 && surname.length >= 2;\n      if (!isArgumentsHaveCorrectLength) throw new Error('The minimum length of arguments is two');\n    }\n  }]);\n\n  return User;\n}();\n\nvar _default = User;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"componnets/User.js","original":{"line":1,"column":0}},{"name":"User","generated":{"line":16,"column":4},"source":"componnets/User.js","original":{"line":3,"column":6}},{"generated":{"line":17,"column":0},"source":"componnets/User.js","original":{"line":4,"column":2}},{"name":"name","generated":{"line":17,"column":16},"source":"componnets/User.js","original":{"line":4,"column":14}},{"generated":{"line":17,"column":20},"source":"componnets/User.js","original":{"line":4,"column":2}},{"name":"surname","generated":{"line":17,"column":22},"source":"componnets/User.js","original":{"line":4,"column":20}},{"generated":{"line":17,"column":29},"source":"componnets/User.js","original":{"line":4,"column":2}},{"generated":{"line":17,"column":31},"source":"componnets/User.js","original":{"line":4,"column":29}},{"generated":{"line":18,"column":0},"source":"componnets/User.js","original":{"line":4,"column":29}},{"generated":{"line":20,"column":0},"source":"componnets/User.js","original":{"line":5,"column":4}},{"name":"uservalidator","generated":{"line":20,"column":9},"source":"componnets/User.js","original":{"line":5,"column":9}},{"generated":{"line":20,"column":22},"source":"componnets/User.js","original":{"line":5,"column":4}},{"name":"name","generated":{"line":20,"column":23},"source":"componnets/User.js","original":{"line":5,"column":23}},{"generated":{"line":20,"column":27},"source":"componnets/User.js","original":{"line":5,"column":4}},{"name":"surname","generated":{"line":20,"column":29},"source":"componnets/User.js","original":{"line":5,"column":29}},{"generated":{"line":20,"column":36},"source":"componnets/User.js","original":{"line":5,"column":4}},{"generated":{"line":21,"column":0},"source":"componnets/User.js","original":{"line":7,"column":4}},{"name":"name","generated":{"line":21,"column":9},"source":"componnets/User.js","original":{"line":7,"column":9}},{"generated":{"line":21,"column":13},"source":"componnets/User.js","original":{"line":7,"column":4}},{"name":"name","generated":{"line":21,"column":16},"source":"componnets/User.js","original":{"line":7,"column":16}},{"generated":{"line":21,"column":20},"source":"componnets/User.js","original":{"line":7,"column":4}},{"generated":{"line":22,"column":0},"source":"componnets/User.js","original":{"line":8,"column":4}},{"name":"surname","generated":{"line":22,"column":9},"source":"componnets/User.js","original":{"line":8,"column":9}},{"generated":{"line":22,"column":16},"source":"componnets/User.js","original":{"line":8,"column":4}},{"name":"surname","generated":{"line":22,"column":19},"source":"componnets/User.js","original":{"line":8,"column":19}},{"generated":{"line":22,"column":26},"source":"componnets/User.js","original":{"line":8,"column":4}},{"generated":{"line":23,"column":0},"source":"componnets/User.js","original":{"line":9,"column":4}},{"name":"uuid","generated":{"line":23,"column":9},"source":"componnets/User.js","original":{"line":9,"column":9}},{"generated":{"line":23,"column":13},"source":"componnets/User.js","original":{"line":9,"column":4}},{"generated":{"line":23,"column":16},"source":"componnets/User.js","original":{"line":9,"column":16}},{"generated":{"line":23,"column":31},"source":"componnets/User.js","original":{"line":9,"column":4}},{"generated":{"line":24,"column":0},"source":"componnets/User.js","original":{"line":10,"column":3}},{"generated":{"line":28,"column":11},"source":"componnets/User.js","original":{"line":12,"column":2}},{"name":"name","generated":{"line":28,"column":34},"source":"componnets/User.js","original":{"line":12,"column":16}},{"generated":{"line":28,"column":38},"source":"componnets/User.js","original":{"line":12,"column":2}},{"name":"surname","generated":{"line":28,"column":40},"source":"componnets/User.js","original":{"line":12,"column":22}},{"generated":{"line":28,"column":47},"source":"componnets/User.js","original":{"line":12,"column":2}},{"generated":{"line":28,"column":49},"source":"componnets/User.js","original":{"line":12,"column":31}},{"generated":{"line":29,"column":0},"source":"componnets/User.js","original":{"line":13,"column":4}},{"name":"isArgumentsHaveCorrectType","generated":{"line":29,"column":10},"source":"componnets/User.js","original":{"line":13,"column":10}},{"generated":{"line":29,"column":36},"source":"componnets/User.js","original":{"line":13,"column":36}},{"generated":{"line":29,"column":39},"source":"componnets/User.js","original":{"line":13,"column":39}},{"name":"name","generated":{"line":29,"column":46},"source":"componnets/User.js","original":{"line":13,"column":46}},{"generated":{"line":29,"column":50},"source":"componnets/User.js","original":{"line":13,"column":39}},{"generated":{"line":29,"column":55},"source":"componnets/User.js","original":{"line":13,"column":55}},{"generated":{"line":29,"column":63},"source":"componnets/User.js","original":{"line":13,"column":39}},{"generated":{"line":29,"column":67},"source":"componnets/User.js","original":{"line":13,"column":67}},{"name":"surname","generated":{"line":29,"column":74},"source":"componnets/User.js","original":{"line":13,"column":74}},{"generated":{"line":29,"column":81},"source":"componnets/User.js","original":{"line":13,"column":67}},{"generated":{"line":29,"column":86},"source":"componnets/User.js","original":{"line":13,"column":86}},{"generated":{"line":29,"column":94},"source":"componnets/User.js","original":{"line":13,"column":4}},{"generated":{"line":30,"column":0},"source":"componnets/User.js","original":{"line":14,"column":4}},{"generated":{"line":30,"column":10},"source":"componnets/User.js","original":{"line":14,"column":7}},{"name":"isArgumentsHaveCorrectType","generated":{"line":30,"column":11},"source":"componnets/User.js","original":{"line":14,"column":8}},{"generated":{"line":30,"column":37},"source":"componnets/User.js","original":{"line":14,"column":4}},{"generated":{"line":30,"column":39},"source":"componnets/User.js","original":{"line":14,"column":36}},{"generated":{"line":30,"column":45},"source":"componnets/User.js","original":{"line":14,"column":42}},{"name":"Error","generated":{"line":30,"column":49},"source":"componnets/User.js","original":{"line":14,"column":46}},{"generated":{"line":30,"column":54},"source":"componnets/User.js","original":{"line":14,"column":42}},{"generated":{"line":30,"column":55},"source":"componnets/User.js","original":{"line":14,"column":52}},{"generated":{"line":30,"column":102},"source":"componnets/User.js","original":{"line":14,"column":42}},{"generated":{"line":30,"column":103},"source":"componnets/User.js","original":{"line":14,"column":36}},{"generated":{"line":31,"column":0},"source":"componnets/User.js","original":{"line":16,"column":4}},{"name":"isArgumentsHaveCorrectLength","generated":{"line":31,"column":10},"source":"componnets/User.js","original":{"line":16,"column":10}},{"generated":{"line":31,"column":38},"source":"componnets/User.js","original":{"line":16,"column":38}},{"name":"name","generated":{"line":31,"column":41},"source":"componnets/User.js","original":{"line":16,"column":41}},{"generated":{"line":31,"column":45},"source":"componnets/User.js","original":{"line":16,"column":45}},{"name":"length","generated":{"line":31,"column":46},"source":"componnets/User.js","original":{"line":16,"column":46}},{"generated":{"line":31,"column":52},"source":"componnets/User.js","original":{"line":16,"column":41}},{"generated":{"line":31,"column":56},"source":"componnets/User.js","original":{"line":16,"column":56}},{"generated":{"line":31,"column":57},"source":"componnets/User.js","original":{"line":16,"column":41}},{"name":"surname","generated":{"line":31,"column":61},"source":"componnets/User.js","original":{"line":16,"column":61}},{"generated":{"line":31,"column":68},"source":"componnets/User.js","original":{"line":16,"column":68}},{"name":"length","generated":{"line":31,"column":69},"source":"componnets/User.js","original":{"line":16,"column":69}},{"generated":{"line":31,"column":75},"source":"componnets/User.js","original":{"line":16,"column":61}},{"generated":{"line":31,"column":79},"source":"componnets/User.js","original":{"line":16,"column":79}},{"generated":{"line":31,"column":80},"source":"componnets/User.js","original":{"line":16,"column":4}},{"generated":{"line":32,"column":0},"source":"componnets/User.js","original":{"line":17,"column":4}},{"generated":{"line":32,"column":10},"source":"componnets/User.js","original":{"line":17,"column":7}},{"name":"isArgumentsHaveCorrectLength","generated":{"line":32,"column":11},"source":"componnets/User.js","original":{"line":17,"column":8}},{"generated":{"line":32,"column":39},"source":"componnets/User.js","original":{"line":17,"column":4}},{"generated":{"line":32,"column":41},"source":"componnets/User.js","original":{"line":17,"column":38}},{"generated":{"line":32,"column":47},"source":"componnets/User.js","original":{"line":17,"column":44}},{"name":"Error","generated":{"line":32,"column":51},"source":"componnets/User.js","original":{"line":17,"column":48}},{"generated":{"line":32,"column":56},"source":"componnets/User.js","original":{"line":17,"column":44}},{"generated":{"line":32,"column":57},"source":"componnets/User.js","original":{"line":17,"column":54}},{"generated":{"line":32,"column":97},"source":"componnets/User.js","original":{"line":17,"column":44}},{"generated":{"line":32,"column":98},"source":"componnets/User.js","original":{"line":17,"column":38}},{"generated":{"line":33,"column":0},"source":"componnets/User.js","original":{"line":18,"column":3}},{"name":"User","generated":{"line":39,"column":15},"source":"componnets/User.js","original":{"line":22,"column":15}}],"sources":{"componnets/User.js":"import { v4 as uuidv4 } from 'uuid';\n\nclass User {\n  constructor(name, surname) {\n    this.uservalidator(name, surname);\n\n    this.name = name;\n    this.surname = surname;\n    this.uuid = uuidv4();\n  }\n\n  uservalidator(name, surname) {\n    const isArgumentsHaveCorrectType = typeof name === 'string' && typeof surname === 'string';\n    if(!isArgumentsHaveCorrectType) throw new Error('Argument name and surname have to be a string');\n\n    const isArgumentsHaveCorrectLength = name.length >= 2 && surname.length >= 2;\n    if(!isArgumentsHaveCorrectLength) throw new Error('The minimum length of arguments is two');\n  }\n\n}\n\nexport default User;\n"},"lineCount":null}},"error":null,"hash":"5e4aee400e104d850be9fec37edd72ea","cacheData":{"env":{}}}