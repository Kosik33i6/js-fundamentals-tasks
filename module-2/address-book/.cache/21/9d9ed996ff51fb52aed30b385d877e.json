{"id":"utils.js","dependencies":[{"name":"D:\\Localhost-JS-TS-Fundamentals\\tasks\\.babelrc","includedInParent":true,"mtime":1631003182956},{"name":"D:\\Localhost-JS-TS-Fundamentals\\tasks\\package.json","includedInParent":true,"mtime":1631005897540}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/* eslint-disable */\nfunction isEmailValid(value) {\n  var isString = typeof value === 'string';\n  if (!isString) throw new Error('Arguments have to be a string type');\n  var regExpForEmail = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n  var isValid = regExpForEmail.test(value);\n  return isValid;\n}\n\nvar _default = isEmailValid;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"utils.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"utils.js","original":{"line":3,"column":0}},{"name":"isEmailValid","generated":{"line":9,"column":9},"source":"utils.js","original":{"line":3,"column":9}},{"generated":{"line":9,"column":21},"source":"utils.js","original":{"line":3,"column":0}},{"name":"value","generated":{"line":9,"column":22},"source":"utils.js","original":{"line":3,"column":22}},{"generated":{"line":9,"column":27},"source":"utils.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":29},"source":"utils.js","original":{"line":3,"column":29}},{"generated":{"line":10,"column":0},"source":"utils.js","original":{"line":4,"column":2}},{"name":"isString","generated":{"line":10,"column":6},"source":"utils.js","original":{"line":4,"column":8}},{"generated":{"line":10,"column":14},"source":"utils.js","original":{"line":4,"column":16}},{"generated":{"line":10,"column":17},"source":"utils.js","original":{"line":4,"column":19}},{"name":"value","generated":{"line":10,"column":24},"source":"utils.js","original":{"line":4,"column":26}},{"generated":{"line":10,"column":29},"source":"utils.js","original":{"line":4,"column":19}},{"generated":{"line":10,"column":34},"source":"utils.js","original":{"line":4,"column":36}},{"generated":{"line":10,"column":42},"source":"utils.js","original":{"line":4,"column":2}},{"generated":{"line":11,"column":0},"source":"utils.js","original":{"line":5,"column":2}},{"generated":{"line":11,"column":6},"source":"utils.js","original":{"line":5,"column":5}},{"name":"isString","generated":{"line":11,"column":7},"source":"utils.js","original":{"line":5,"column":6}},{"generated":{"line":11,"column":15},"source":"utils.js","original":{"line":5,"column":2}},{"generated":{"line":11,"column":17},"source":"utils.js","original":{"line":5,"column":16}},{"generated":{"line":11,"column":23},"source":"utils.js","original":{"line":5,"column":22}},{"name":"Error","generated":{"line":11,"column":27},"source":"utils.js","original":{"line":5,"column":26}},{"generated":{"line":11,"column":32},"source":"utils.js","original":{"line":5,"column":22}},{"generated":{"line":11,"column":33},"source":"utils.js","original":{"line":5,"column":32}},{"generated":{"line":11,"column":69},"source":"utils.js","original":{"line":5,"column":22}},{"generated":{"line":11,"column":70},"source":"utils.js","original":{"line":5,"column":16}},{"generated":{"line":12,"column":0},"source":"utils.js","original":{"line":7,"column":2}},{"name":"regExpForEmail","generated":{"line":12,"column":6},"source":"utils.js","original":{"line":7,"column":8}},{"generated":{"line":12,"column":20},"source":"utils.js","original":{"line":7,"column":22}},{"generated":{"line":12,"column":23},"source":"utils.js","original":{"line":7,"column":25}},{"generated":{"line":12,"column":471},"source":"utils.js","original":{"line":7,"column":2}},{"generated":{"line":13,"column":0},"source":"utils.js","original":{"line":9,"column":2}},{"name":"isValid","generated":{"line":13,"column":6},"source":"utils.js","original":{"line":9,"column":8}},{"generated":{"line":13,"column":13},"source":"utils.js","original":{"line":9,"column":15}},{"name":"regExpForEmail","generated":{"line":13,"column":16},"source":"utils.js","original":{"line":9,"column":18}},{"generated":{"line":13,"column":30},"source":"utils.js","original":{"line":9,"column":32}},{"name":"test","generated":{"line":13,"column":31},"source":"utils.js","original":{"line":9,"column":33}},{"generated":{"line":13,"column":35},"source":"utils.js","original":{"line":9,"column":18}},{"name":"value","generated":{"line":13,"column":36},"source":"utils.js","original":{"line":9,"column":38}},{"generated":{"line":13,"column":41},"source":"utils.js","original":{"line":9,"column":18}},{"generated":{"line":13,"column":42},"source":"utils.js","original":{"line":9,"column":2}},{"generated":{"line":14,"column":0},"source":"utils.js","original":{"line":11,"column":2}},{"name":"isValid","generated":{"line":14,"column":9},"source":"utils.js","original":{"line":11,"column":9}},{"generated":{"line":14,"column":16},"source":"utils.js","original":{"line":11,"column":2}},{"generated":{"line":15,"column":0},"source":"utils.js","original":{"line":12,"column":1}},{"name":"isEmailValid","generated":{"line":17,"column":15},"source":"utils.js","original":{"line":14,"column":15}}],"sources":{"utils.js":"/* eslint-disable */\n\nfunction isEmailValid(value) {\n  const isString = typeof value === 'string';\n  if(!isString) throw new Error('Arguments have to be a string type');\n\n  const regExpForEmail = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n\n  const isValid = regExpForEmail.test(value);\n\n  return isValid;\n}\n\nexport default isEmailValid;\n"},"lineCount":null}},"error":null,"hash":"1d30d583e5b1acbe0547c77fbbe30f7b","cacheData":{"env":{}}}